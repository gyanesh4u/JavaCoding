{\rtf1\ansi\ansicpg1252\cocoartf2759
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica-Bold;\f1\fswiss\fcharset0 Helvetica;\f2\fnil\fcharset0 Menlo-Bold;
\f3\fnil\fcharset0 Menlo-Regular;\f4\fnil\fcharset0 Menlo-BoldItalic;\f5\fnil\fcharset0 Menlo-Italic;
\f6\fnil\fcharset0 Verdana-Bold;\f7\fnil\fcharset0 Verdana;\f8\fnil\fcharset0 Verdana-Italic;
}
{\colortbl;\red255\green255\blue255;\red127\green0\blue85;\red106\green62\blue62;\red42\green0\blue255;
\red0\green0\blue192;\red63\green127\blue95;\red13\green13\blue13;\red24\green25\blue26;\red255\green255\blue255;
\red39\green78\blue192;\red38\green38\blue38;}
{\*\expandedcolortbl;;\csgenericrgb\c49804\c0\c33333;\csgenericrgb\c41569\c24314\c24314;\csgenericrgb\c16471\c0\c100000;
\csgenericrgb\c0\c0\c75294;\csgenericrgb\c24706\c49804\c37255;\cssrgb\c5882\c5882\c5882;\cssrgb\c12549\c12941\c13333;\cssrgb\c100000\c100000\c100000;
\cssrgb\c20000\c40000\c80000;\cssrgb\c20000\c20000\c20000;}
{\*\listtable{\list\listtemplateid1\listhybrid{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{decimal\}.}{\leveltext\leveltemplateid1\'02\'00.;}{\levelnumbers\'01;}\fi-360\li720\lin720 }{\listname ;}\listid1}}
{\*\listoverridetable{\listoverride\listid1\listoverridecount0\ls1}}
\paperw11900\paperh16840\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\b\fs24 \cf0 \ul \ulc0 //Java program to find second largest element in an array.
\f1\b0 \ulnone \
import java.util.*;\
import java.util.stream.*;\
class HelloWorld \{\
    public static void main(String[] args) \{\
    int a[]=\{0,1,2,3,4,5,6,7,7,6,8\};\
    int largest=a[0];//1\
    int sec=0;\
    \
    for(int i=1;i<a.length;i++)\{\
        if(largest<a[i])\{\
           sec=largest;\
            largest=a[i];\
        \}\
        else if(sec < a[i] && a[i] != largest)\{\
            sec=a[i];\
        \}\
      \
    \}\
      System.out.println(sec);\
    \}\
\}\
\

\f0\b \ul //Java program to find second largest element in an ArrayList.
\f1\b0 \ulnone \
\
import java.util.*;\
import java.util.stream.*;\
class HelloWorld \{\
    public static void main(String[] args) \{\
   List<Integer> list=Arrays.asList(1,2,3,4,5,6,7,8,9);\
   \
   \
  int secL=list.stream().sorted(Collections.reverseOrder()).distinct().skip(1).findFirst().get();\
  System.out.println(secL);\
    \}\
\}\
\

\f0\b \ul //Java program reverse each word in a String
\f1\b0 \ulnone \
I/p->hello world\
O/p->olleh dlrow\
\
class HelloWorld \{\
    public static void main(String[] args) \{\
   String s="hello world";\
   String[] word=s.split(" ");\
   String rev="";\
   for(String w:word)\{\
       String revWord="";\
       for(int i=w.length()-1;i>=0;i--)\{\
           revWord=revWord+w.charAt(i);\
       \}\
       rev=rev+revWord+" ";\
   \}\
   System.out.println(rev);\
    \}\
\}\
\

\f0\b \ul //Java program to find occurrence of each character.\
\

\f1\b0 \ulnone import java.util.*;\
class HelloWorld \{\
    public static void main(String[] args) \{\
          String s="gyanesh kamal";\
  char[] ch=s.toCharArray();\
  Map<Character,Integer> map=new HashMap();\
  \
  for(char c:ch)\{\
      if(!String.valueOf(c).isBlank())\
      if(map.containsKey(c))\{\
          map.put(c,map.get(c)+1);\
      \}\
      else\{\
          map.put(c,1);\
      \}\
  \}\
  System.out.println(map);\
    \}\
\}\
\
\
\

\f0\b \ul //Java program to find only duplicate character\
\

\f1\b0 \ulnone import java.util.*;\
class HelloWorld \{\
    public static void main(String[] args) \{\
          String s="gyanesh kamal";\
  char[] ch=s.toCharArray();\
  Map<Character,Integer> map=new HashMap();\
  \
  for(char c:ch)\{\
      if(!String.valueOf(c).isBlank())\
      if(map.containsKey(c))\{\
          map.put(c,map.get(c)+1);\
      \}\
      else\{\
          map.put(c,1);\
      \}\
  \}\
for(Map.Entry<Character,Integer> entry:map.entrySet())\{\
    if(entry.getValue()>1)\{\
        System.out.println(entry.getKey()+":"+entry.getValue());\
    \}\
\}\
    \}\
\}\
\

\f0\b \ul //Java program to Remove duplicate character in a String
\f1\b0 \ulnone \
\
\pard\pardeftab720\partightenfactor0

\f2\b\fs28 \cf2 public
\f3\b0 \cf0  
\f2\b \cf2 class
\f3\b0 \cf0  RemoveDuplicate \{\
\
	
\f2\b \cf2 public
\f3\b0 \cf0  
\f2\b \cf2 static
\f3\b0 \cf0  
\f2\b \cf2 void
\f3\b0 \cf0  main(String[] \cf3 args\cf0 ) \{\
		String \cf3 string\cf0 =\cf4 "programming"\cf0 ;\
		StringBuilder \cf3 sBuilder\cf0 =
\f2\b \cf2 new
\f3\b0 \cf0  StringBuilder();\
		LinkedHashSet<Character>\cf3 set\cf0 =
\f2\b \cf2 new
\f3\b0 \cf0  LinkedHashSet<>();\
		
\f2\b \cf2 for
\f3\b0 \cf0 (
\f2\b \cf2 int
\f3\b0 \cf0  \cf3 i\cf0 =0;\cf3 i\cf0 <\cf3 string\cf0 .length();\cf3 i\cf0 ++) \{\
			\cf3 set\cf0 .add(\cf3 string\cf0 .charAt(\cf3 i\cf0 ));\
		\}\
		
\f2\b \cf2 for
\f3\b0 \cf0 (Character \cf3 ch\cf0 :\cf3 set\cf0 ) \{\
			\cf3 sBuilder\cf0 .append(\cf3 ch\cf0 );\
			\
		\}\
		System.
\f4\i\b \cf5 out
\f3\i0\b0 \cf0 .println(\cf3 sBuilder\cf0 );\
	\}\
\}\
\
\pard\pardeftab720\partightenfactor0

\f0\b\fs24 \cf0 \ul //Java program to extract character and integer from a String\
\
\pard\pardeftab720\partightenfactor0

\f2\fs28 \cf2 \ulnone public
\f3\b0 \cf0  
\f2\b \cf2 class
\f3\b0 \cf0  Test6 \{\
\
	
\f2\b \cf2 public
\f3\b0 \cf0  
\f2\b \cf2 static
\f3\b0 \cf0  
\f2\b \cf2 void
\f3\b0 \cf0  main(String[] \cf3 args\cf0 ) \{\
		String \cf3 string\cf0 =\cf4 "abcdef123456"\cf0 ;\
		StringBuilder \cf3 number\cf0 =
\f2\b \cf2 new
\f3\b0 \cf0  StringBuilder();\
		StringBuilder \cf3 letter\cf0 =
\f2\b \cf2 new
\f3\b0 \cf0  StringBuilder();\
		
\f2\b \cf2 char
\f3\b0 \cf0 [] \cf3 ch\cf0 =\cf3 string\cf0 .toCharArray();\
		
\f2\b \cf2 for
\f3\b0 \cf0 (
\f2\b \cf2 char
\f3\b0 \cf0  \cf3 c\cf0 :\cf3 ch\cf0 ) \{\
		
\f2\b \cf2 if
\f3\b0 \cf0 (Character.
\f5\i isDigit
\f3\i0 (\cf3 c\cf0 )) \{\
			\cf3 number\cf0 .append(\cf3 c\cf0 );\
		\}\
		
\f2\b \cf2 else
\f3\b0 \cf0  
\f2\b \cf2 if
\f3\b0 \cf0  (Character.
\f5\i isLetter
\f3\i0 (\cf3 c\cf0 )) \{\
			\cf3 letter\cf0 .append(\cf3 c\cf0 );\
		\}\
		\
		\
	\}\
		System.
\f4\i\b \cf5 out
\f3\i0\b0 \cf0 .println(\cf3 number\cf0 );\
		System.
\f4\i\b \cf5 out
\f3\i0\b0 \cf0 .println(\cf3 letter\cf0 );\
\}\
\}\
\
\pard\pardeftab720\partightenfactor0

\f0\b\fs24 \cf0 \ul //Java program to find Armstrong number.
\f3\b0\fs28 \ulnone \
\
\pard\pardeftab720\partightenfactor0

\f2\b \cf2 public
\f3\b0 \cf0  
\f2\b \cf2 class
\f3\b0 \cf0  ArmstrongNumber \{\
\
	
\f2\b \cf2 public
\f3\b0 \cf0  
\f2\b \cf2 static
\f3\b0 \cf0  
\f2\b \cf2 void
\f3\b0 \cf0  isArmstrong(
\f2\b \cf2 int
\f3\b0 \cf0  \cf3 num\cf0 ) \{\
		
\f2\b \cf2 int
\f3\b0 \cf0  \cf3 cube\cf0 =0;\
		
\f2\b \cf2 int
\f3\b0 \cf0  \cf3 r\cf0 ;\
		
\f2\b \cf2 int
\f3\b0 \cf0  \cf3 t\cf0 ;\
		\cf3 t\cf0 =\cf3 num\cf0 ;\
		\
		
\f2\b \cf2 while
\f3\b0 \cf0 (\cf3 num\cf0 >0) \{\
			\cf3 r\cf0 =\cf3 num\cf0 %10;\
			\cf3 num\cf0 =\cf3 num\cf0 /10;\
			\cf3 cube\cf0 =\cf3 cube\cf0 +(\cf3 r\cf0 *\cf3 r\cf0 *\cf3 r\cf0 );\
		\}\
		
\f2\b \cf2 if
\f3\b0 \cf0 (\cf3 t\cf0 ==\cf3 cube\cf0 ) \{\
			System.
\f4\i\b \cf5 out
\f3\i0\b0 \cf0 .println(\cf4 "armstrong number"\cf0 );\
		\}\
		
\f2\b \cf2 else
\f3\b0 \cf0  \{\
			System.
\f4\i\b \cf5 out
\f3\i0\b0 \cf0 .println(\cf4 "not armstrong"\cf0 );\
		\}\
	\}\
	
\f2\b \cf2 public
\f3\b0 \cf0  
\f2\b \cf2 static
\f3\b0 \cf0  
\f2\b \cf2 void
\f3\b0 \cf0  main(String[] \cf3 args\cf0 ) \{\
		
\f5\i isArmstrong
\f3\i0 (153);\
	\}\
\}\
\
\pard\pardeftab720\partightenfactor0

\f0\b\fs24 \cf0 \ul //Java program to find duplicate elements\
\
\pard\pardeftab720\partightenfactor0

\f2\fs28 \cf2 \ulnone public
\f3\b0 \cf0  
\f2\b \cf2 class
\f3\b0 \cf0  DuplicateElement \{\
\
	
\f2\b \cf2 public
\f3\b0 \cf0  
\f2\b \cf2 static
\f3\b0 \cf0  
\f2\b \cf2 void
\f3\b0 \cf0  main(String[] \cf3 args\cf0 ) \{\
		List<Integer> \cf3 list\cf0 =Arrays.
\f5\i asList
\f3\i0 (1,2,3,3,4,4);\
		Set<Integer>\cf3 set\cf0 =
\f2\b \cf2 new
\f3\b0 \cf0  HashSet<Integer>();\
		\
		
\f2\b \cf2 for
\f3\b0 \cf0 (
\f2\b \cf2 int
\f3\b0 \cf0  \cf3 i\cf0 =0;\cf3 i\cf0 <\cf3 list\cf0 .size();\cf3 i\cf0 ++) \{\
			
\f2\b \cf2 if
\f3\b0 \cf0 (\cf3 set\cf0 .contains(\cf3 list\cf0 .get(\cf3 i\cf0 ))) \{\
				System.
\f4\i\b \cf5 out
\f3\i0\b0 \cf0 .println(\cf3 list\cf0 .get(\cf3 i\cf0 ));\
			\}\
			
\f2\b \cf2 else
\f3\b0 \cf0  \{\
				\cf3 set\cf0 .add(\cf3 list\cf0 .get(\cf3 i\cf0 ));\
			\}\
		\}\
		\
		\
\}\
\}\
\
\pard\pardeftab720\partightenfactor0

\f0\b\fs24 \cf0 \ul //Java program to find factorial of a number.\
\
\pard\pardeftab720\partightenfactor0

\f2\fs28 \cf2 \ulnone public
\f3\b0 \cf0  
\f2\b \cf2 class
\f3\b0 \cf0  Factorial \{\
\
	
\f2\b \cf2 public
\f3\b0 \cf0  
\f2\b \cf2 static
\f3\b0 \cf0  
\f2\b \cf2 int
\f3\b0 \cf0  fact(
\f2\b \cf2 int
\f3\b0 \cf0  \cf3 num\cf0 ) \{\
		
\f2\b \cf2 if
\f3\b0 \cf0 (\cf3 num\cf0 ==0)\
			
\f2\b \cf2 return
\f3\b0 \cf0  1;\
		
\f2\b \cf2 else
\f3\b0 \cf0  \
			
\f2\b \cf2 return
\f3\b0 \cf0  (\cf3 num\cf0 *
\f5\i fact
\f3\i0 (\cf3 num\cf0 -1));\
			\
		\
	\}\
	
\f2\b \cf2 public
\f3\b0 \cf0  
\f2\b \cf2 static
\f3\b0 \cf0  
\f2\b \cf2 void
\f3\b0 \cf0  main(String[] \cf3 args\cf0 ) \{\
		System.
\f4\i\b \cf5 out
\f3\i0\b0 \cf0 .println(
\f5\i fact
\f3\i0 (0));\
	\}\
\}\
\
\pard\pardeftab720\partightenfactor0

\f0\b\fs24 \cf0 \ul //Java program to find Palindrome number
\f3\b0\fs28 \ulnone \
\
\pard\pardeftab720\partightenfactor0

\f2\b \cf2 public
\f3\b0 \cf0  
\f2\b \cf2 class
\f3\b0 \cf0  PalindromeNumber \{\
\
	
\f2\b \cf2 public
\f3\b0 \cf0  
\f2\b \cf2 static
\f3\b0 \cf0  
\f2\b \cf2 void
\f3\b0 \cf0  isPalindrome(
\f2\b \cf2 int
\f3\b0 \cf0  \cf3 num\cf0 ) \{\
		\
		
\f2\b \cf2 int
\f3\b0 \cf0  \cf3 r\cf0 =0;\
		
\f2\b \cf2 int
\f3\b0 \cf0  \cf3 sum\cf0 =0;\
		
\f2\b \cf2 int
\f3\b0 \cf0  \cf3 t\cf0 ;\
		\cf3 t\cf0 =\cf3 num\cf0 ;\
		
\f2\b \cf2 while
\f3\b0 \cf0 (\cf3 num\cf0 >0) \{\
			\cf3 r\cf0 =\cf3 num\cf0 %10;\
			\cf3 sum\cf0 =(\cf3 sum\cf0 *10)+\cf3 r\cf0 ;\
			\cf3 num\cf0 =\cf3 num\cf0 /10;\
		\}\
		
\f2\b \cf2 if
\f3\b0 \cf0 (\cf3 t\cf0 ==\cf3 sum\cf0 ) \{\
			System.
\f4\i\b \cf5 out
\f3\i0\b0 \cf0 .println(\cf4 "palindrome"\cf0 );\
		\}\
		
\f2\b \cf2 else
\f3\b0 \cf0  \{\
			System.
\f4\i\b \cf5 out
\f3\i0\b0 \cf0 .println(\cf4 "not palindrome"\cf0 );\
		\}\
	\}\
	
\f2\b \cf2 public
\f3\b0 \cf0  
\f2\b \cf2 static
\f3\b0 \cf0  
\f2\b \cf2 void
\f3\b0 \cf0  main(String[] \cf3 args\cf0 ) \{\
		
\f5\i isPalindrome
\f3\i0 (121);\
	\}\
\}\
\
\pard\pardeftab720\partightenfactor0

\f0\b\fs24 \cf0 \ul //Java program to shift all zeros
\f1\b0\fs28 \ulnone .\
\
\pard\pardeftab720\partightenfactor0

\f2\b \cf2 public
\f3\b0 \cf0  
\f2\b \cf2 class
\f3\b0 \cf0  ShiftZero \{\
\
	
\f2\b \cf2 public
\f3\b0 \cf0  
\f2\b \cf2 static
\f3\b0 \cf0  
\f2\b \cf2 int
\f3\b0 \cf0 [] shiftZero(
\f2\b \cf2 int
\f3\b0 \cf0  \cf3 a\cf0 []) \{\
		
\f2\b \cf2 if
\f3\b0 \cf0 (\cf3 a\cf0 .\cf5 length\cf0 ==1) \{\
			
\f2\b \cf2 return
\f3\b0 \cf0  \cf3 a\cf0 ;\
		\}\
		
\f2\b \cf2 int
\f3\b0 \cf0 [] \cf3 newArray\cf0 =
\f2\b \cf2 new
\f3\b0 \cf0  
\f2\b \cf2 int
\f3\b0 \cf0 [\cf3 a\cf0 .\cf5 length\cf0 ];\
		
\f2\b \cf2 int
\f3\b0 \cf0  \cf3 count\cf0 =0;\
		
\f2\b \cf2 for
\f3\b0 \cf0 (
\f2\b \cf2 int
\f3\b0 \cf0  \cf3 number\cf0 :\cf3 a\cf0 ) \{\
			
\f2\b \cf2 if
\f3\b0 \cf0 (\cf3 number\cf0 !=0) \{\
				\cf3 newArray\cf0 [\cf3 count\cf0 ++]=\cf3 number\cf0 ;\
				\cf6 //count++;\cf0 \
			\}\
		\}\
		
\f2\b \cf2 return
\f3\b0 \cf0  \cf3 newArray\cf0 ;\
	\}\
	
\f2\b \cf2 public
\f3\b0 \cf0  
\f2\b \cf2 static
\f3\b0 \cf0  
\f2\b \cf2 void
\f3\b0 \cf0  main(String[] \cf3 args\cf0 ) \{\
		
\f2\b \cf2 int
\f3\b0 \cf0  [] \cf3 i\cf0 = \{1,0,0,1,0,1,1\};\
		System.
\f4\i\b \cf5 out
\f3\i0\b0 \cf0 .println(Arrays.
\f5\i toString
\f3\i0 (
\f5\i shiftZero
\f3\i0 (\cf3 i\cf0 )));\
	\}\
\}\
\
\pard\pardeftab720\partightenfactor0

\f0\b\fs24 \cf0 \ul //Java program to swap to String\
\
\pard\pardeftab720\partightenfactor0

\f2\fs28 \cf2 \ulnone public
\f3\b0 \cf0  
\f2\b \cf2 class
\f3\b0 \cf0  SwapString \{\
\
	\
	
\f2\b \cf2 public
\f3\b0 \cf0  
\f2\b \cf2 static
\f3\b0 \cf0  
\f2\b \cf2 void
\f3\b0 \cf0  main(String[] \cf3 args\cf0 ) \{\
		String \cf3 a\cf0 =\cf4 "gyanesh"\cf0 ;\
		String \cf3 b\cf0 =\cf4 "kamal"\cf0 ;\
		\
		\cf3 a\cf0 =\cf3 a\cf0 +\cf3 b\cf0 ;\
		\
		\cf3 b\cf0 =\cf3 a\cf0 .substring(0,(\cf3 a\cf0 .length()-\cf3 b\cf0 .length()));\
		\cf3 a\cf0 =\cf3 a\cf0 .substring(\cf3 b\cf0 .length());\
		\
		System.
\f4\i\b \cf5 out
\f3\i0\b0 \cf0 .println(\cf3 a\cf0 );\
		System.
\f4\i\b \cf5 out
\f3\i0\b0 \cf0 .println(\cf3 b\cf0 );\
	\}\
\}\
\
\pard\pardeftab720\partightenfactor0

\f0\b\fs24 \cf0 \ul //Java program to count the uppercase in a String\
\
\pard\pardeftab720\partightenfactor0

\f2\fs28 \cf2 \ulnone public
\f3\b0 \cf0  
\f2\b \cf2 class
\f3\b0 \cf0  UpperCase \{\
\
	\
	
\f2\b \cf2 public
\f3\b0 \cf0  
\f2\b \cf2 static
\f3\b0 \cf0  
\f2\b \cf2 void
\f3\b0 \cf0  main(String[] \cf3 args\cf0 ) \{\
		String \cf3 s\cf0 =\cf4 "I love JAva Programming"\cf0 ;\
		
\f2\b \cf2 int
\f3\b0 \cf0  \cf3 upper\cf0 =0;\
		
\f2\b \cf2 for
\f3\b0 \cf0 (
\f2\b \cf2 int
\f3\b0 \cf0  \cf3 i\cf0 =\cf3 s\cf0 .length()-1;\cf3 i\cf0 >=0;\cf3 i\cf0 --) \{\
			
\f2\b \cf2 if
\f3\b0 \cf0 (Character.
\f5\i isUpperCase
\f3\i0 (\cf3 s\cf0 .charAt(\cf3 i\cf0 ))) \{\
				\cf3 upper\cf0 ++;\
				System.
\f4\i\b \cf5 out
\f3\i0\b0 \cf0 .println(\cf3 s\cf0 .charAt(\cf3 i\cf0 ));\
				\
			\}\
		\}\
		System.
\f4\i\b \cf5 out
\f3\i0\b0 \cf0 .println(\cf3 upper\cf0 );\
	\}\
\
		\
\}\
\pard\pardeftab720\partightenfactor0

\f0\b\fs24 \cf0 \ul //Java program to find uncommon number in an Array
\f3\b0\fs28 \ulnone \
\
\pard\pardeftab720\partightenfactor0

\f2\b \cf2 public
\f3\b0 \cf0  
\f2\b \cf2 class
\f3\b0 \cf0  UncommonNumbers \{\
	
\f2\b \cf2 public
\f3\b0 \cf0  
\f2\b \cf2 static
\f3\b0 \cf0  
\f2\b \cf2 void
\f3\b0 \cf0  main(String[] \cf3 args\cf0 ) \{\
        
\f2\b \cf2 int
\f3\b0 \cf0 [] \cf3 array1\cf0  = \{1, 2, 3, 4, 5\};\
        
\f2\b \cf2 int
\f3\b0 \cf0 [] \cf3 array2\cf0  = \{4, 5, 6, 7, 8\};\
        \
        Set<Integer> \cf3 uniqueNumbers\cf0  = 
\f2\b \cf2 new
\f3\b0 \cf0  HashSet<>();\
        \
        \cf6 // Add elements from array1 to the HashSet\cf0 \
        
\f2\b \cf2 for
\f3\b0 \cf0  (
\f2\b \cf2 int
\f3\b0 \cf0  \cf3 num\cf0  : \cf3 array1\cf0 ) \{\
            \cf3 uniqueNumbers\cf0 .add(\cf3 num\cf0 );\
        \}\
        \
        \cf6 // Remove elements from array2 that are already in the HashSet\cf0 \
        
\f2\b \cf2 for
\f3\b0 \cf0  (
\f2\b \cf2 int
\f3\b0 \cf0  \cf3 num\cf0  : \cf3 array2\cf0 ) \{\
            
\f2\b \cf2 if
\f3\b0 \cf0  (\cf3 uniqueNumbers\cf0 .contains(\cf3 num\cf0 )) \{\
                \cf3 uniqueNumbers\cf0 .remove(\cf3 num\cf0 );\
            \} 
\f2\b \cf2 else
\f3\b0 \cf0  \{\
                \cf3 uniqueNumbers\cf0 .add(\cf3 num\cf0 );\
            \}\
        \}\
        \
        \cf6 // Print the uncommon numbers\cf0 \
        System.
\f4\i\b \cf5 out
\f3\i0\b0 \cf0 .println(\cf4 "Uncommon numbers in the two arrays:"\cf0 );\
        
\f2\b \cf2 for
\f3\b0 \cf0  (
\f2\b \cf2 int
\f3\b0 \cf0  \cf3 num\cf0  : \cf3 uniqueNumbers\cf0 ) \{\
            System.
\f4\i\b \cf5 out
\f3\i0\b0 \cf0 .println(\cf3 num\cf0 );\
        \}\
    \}\
\}\
\
\pard\pardeftab720\partightenfactor0

\f0\b\fs24 \cf0 \ul //Java program to find Anagram String\
\
\pard\pardeftab720\partightenfactor0

\f2\fs28 \cf2 \ulnone public
\f3\b0 \cf0  
\f2\b \cf2 class
\f3\b0 \cf0  Anagram \{\
\
	
\f2\b \cf2 public
\f3\b0 \cf0  
\f2\b \cf2 static
\f3\b0 \cf0  
\f2\b \cf2 boolean
\f3\b0 \cf0  isAnagram(String \cf3 s1\cf0 ,String \cf3 s2\cf0 ) \{\
		String \cf3 str1\cf0 =\cf3 s1\cf0 .replaceAll(\cf4 " "\cf0 , \cf4 ""\cf0 );\
		String \cf3 str2\cf0 =\cf3 s2\cf0 .replaceAll(\cf4 " "\cf0 , \cf4 ""\cf0 );\
		
\f2\b \cf2 if
\f3\b0 \cf0 (\cf3 str1\cf0 .length()!=\cf3 str2\cf0 .length()) \{\
			
\f2\b \cf2 return
\f3\b0 \cf0  
\f2\b \cf2 false
\f3\b0 \cf0 ;\
		\}\
		
\f2\b \cf2 else
\f3\b0 \cf0  \{\
			
\f2\b \cf2 char
\f3\b0 \cf0  \cf3 ch1\cf0 []=\cf3 str1\cf0 .toLowerCase().toCharArray();\
			
\f2\b \cf2 char
\f3\b0 \cf0  \cf3 ch2\cf0 []=\cf3 str2\cf0 .toLowerCase().toCharArray();\
			\
			Arrays.
\f5\i sort
\f3\i0 (\cf3 ch1\cf0 );\
			Arrays.
\f5\i sort
\f3\i0 (\cf3 ch2\cf0 );\
			\
			
\f2\b \cf2 return
\f3\b0 \cf0  Arrays.
\f5\i equals
\f3\i0 (\cf3 ch1\cf0 ,\cf3 ch2\cf0 );\
		\}\
	\}\
	
\f2\b \cf2 public
\f3\b0 \cf0  
\f2\b \cf2 static
\f3\b0 \cf0  
\f2\b \cf2 void
\f3\b0 \cf0  main(String[] \cf3 args\cf0 ) \{\
		System.
\f4\i\b \cf5 out
\f3\i0\b0 \cf0 .println(
\f5\i isAnagram
\f3\i0 (\cf4 "silent"\cf0 , \cf4 "listen"\cf0 ));\
		System.
\f4\i\b \cf5 out
\f3\i0\b0 \cf0 .println(
\f5\i isAnagram
\f3\i0 (\cf4 "cat"\cf0 , \cf4 "ACT"\cf0 ));\
		\
	\}\
\}\
\
\pard\pardeftab720\partightenfactor0

\f0\b\fs24 \cf0 \ul //Java program to check vowels and consonants in a string
\f3\b0\fs28 \ulnone \
\
\pard\pardeftab720\partightenfactor0

\f2\b \cf2 public
\f3\b0 \cf0  
\f2\b \cf2 class
\f3\b0 \cf0  CountVowelConsonant \{\
\
	
\f2\b \cf2 public
\f3\b0 \cf0  
\f2\b \cf2 static
\f3\b0 \cf0  
\f2\b \cf2 void
\f3\b0 \cf0  main(String[] \cf3 args\cf0 ) \{\
		 String \cf3 str\cf0  = \cf4 "This is a really simple sentence"\cf0 ;    \
		 
\f2\b \cf2 int
\f3\b0 \cf0  \cf3 vcount\cf0 =0;\
		 
\f2\b \cf2 int
\f3\b0 \cf0  \cf3 ccount\cf0 =0;\
		 \
		 \cf3 str\cf0  = \cf3 str\cf0 .toLowerCase();\
		 \
		 
\f2\b \cf2 for
\f3\b0 \cf0 (
\f2\b \cf2 int
\f3\b0 \cf0  \cf3 i\cf0 =0;\cf3 i\cf0 <\cf3 str\cf0 .length();\cf3 i\cf0 ++) \{\
			 
\f2\b \cf2 if
\f3\b0 \cf0 (\cf3 str\cf0 .charAt(\cf3 i\cf0 )==\cf4 'a'\cf0 ||\cf3 str\cf0 .charAt(\cf3 i\cf0 )==\cf4 'e'\cf0 ||\cf3 str\cf0 .charAt(\cf3 i\cf0 )==\cf4 'i'\cf0 ||\cf3 str\cf0 .charAt(\cf3 i\cf0 )==\cf4 'o'\cf0 ||\cf3 str\cf0 .charAt(\cf3 i\cf0 )==\cf4 'u'\cf0 ) \{\
				 \cf3 vcount\cf0 ++;\
			 \}\
			 
\f2\b \cf2 else
\f3\b0 \cf0  
\f2\b \cf2 if
\f3\b0 \cf0  (\cf3 str\cf0 .charAt(\cf3 i\cf0 )>=\cf4 'a'\cf0 &&\cf3 str\cf0 .charAt(\cf3 i\cf0 )<=\cf4 'z'\cf0 ) \{\
				\cf3 ccount\cf0 ++;\
			\}\
		 \}\
		 System.
\f4\i\b \cf5 out
\f3\i0\b0 \cf0 .println(\cf4 "vowel "\cf0 +\cf3 vcount\cf0 );\
		 System.
\f4\i\b \cf5 out
\f3\i0\b0 \cf0 .println(\cf4 "consonant "\cf0 +\cf3 ccount\cf0 );\
	\}\
\}\
\
\pard\pardeftab720\partightenfactor0

\f0\b\fs24 \cf0 \ul //Java program to find String is pangram or not\
\
\pard\pardeftab720\partightenfactor0

\f2\fs28 \cf2 \ulnone import
\f3\b0 \cf0  java.util.HashSet;\
\

\f2\b \cf2 public
\f3\b0 \cf0  
\f2\b \cf2 class
\f3\b0 \cf0  Pangram \{\
	
\f2\b \cf2 public
\f3\b0 \cf0  
\f2\b \cf2 static
\f3\b0 \cf0  
\f2\b \cf2 void
\f3\b0 \cf0  main(String[] \cf3 args\cf0 ) \{\
		String \cf3 string\cf0 =\cf4 "abcdefGhijklmnopqrstuvwxyz"\cf0 ;\
		String \cf3 s\cf0 =\cf4 "Enter the string: pack my box with five dozen liquor jugs"\cf0 ;\
		String \cf3 s1\cf0 =\cf4 "Fix problem quickly with galvanized jets"\cf0 ;\
		System.
\f4\i\b \cf5 out
\f3\i0\b0 \cf0 .println(
\f5\i getPangram
\f3\i0 (\cf3 string\cf0 ));\
		System.
\f4\i\b \cf5 out
\f3\i0\b0 \cf0 .println(
\f5\i getPangram
\f3\i0 (\cf3 s\cf0 ));\
		System.
\f4\i\b \cf5 out
\f3\i0\b0 \cf0 .println(
\f5\i getPangram
\f3\i0 (\cf3 s1\cf0 ));\
		\
	\}\
	
\f2\b \cf2 public
\f3\b0 \cf0  
\f2\b \cf2 static
\f3\b0 \cf0  
\f2\b \cf2 boolean
\f3\b0 \cf0  getPangram(String \cf3 s\cf0 ) \{\
		HashSet<Character> \cf3 set\cf0 =
\f2\b \cf2 new
\f3\b0 \cf0  HashSet<>();\
		\
		
\f2\b \cf2 char
\f3\b0 \cf0  \cf3 ch\cf0 []=\cf3 s\cf0 .toLowerCase().toCharArray();\
		
\f2\b \cf2 for
\f3\b0 \cf0 (
\f2\b \cf2 char
\f3\b0 \cf0  \cf3 c\cf0 :\cf3 ch\cf0 ) \{\
			
\f2\b \cf2 if
\f3\b0 \cf0 (Character.
\f5\i isLetter
\f3\i0 (\cf3 c\cf0 )) \{\
				\cf3 set\cf0 .add(\cf3 c\cf0 );\
			\}\
		\}\
		
\f2\b \cf2 return
\f3\b0 \cf0  \cf3 set\cf0 .size()==26;\
	\}\
\
\}\
\
\pard\pardeftab720\partightenfactor0
\cf0 \

\f0\b\fs24 \ul //Java program to find Repeated and Non-Repeated charact\ulc0 er in a String\
\
\pard\pardeftab720\partightenfactor0

\f2\fs28 \cf2 \ulnone public
\f3\b0 \cf0  
\f2\b \cf2 class
\f3\b0 \cf0  FindFirstRepeatedAndNonRepeatedChar \{\
	  
\f2\b \cf2 public
\f3\b0 \cf0  
\f2\b \cf2 static
\f3\b0 \cf0  
\f2\b \cf2 void
\f3\b0 \cf0  firstRepeatedNonRepeatedChar(String \cf3 inputString\cf0 ) \{\
\
	        HashMap<Character, Integer> \cf3 charCountMap\cf0  = 
\f2\b \cf2 new
\f3\b0 \cf0  HashMap<Character, Integer>();\
\
	        
\f2\b \cf2 char
\f3\b0 \cf0 [] \cf3 strArray\cf0  = \cf3 inputString\cf0 .toCharArray();\
\
	        
\f2\b \cf2 for
\f3\b0 \cf0  (
\f2\b \cf2 char
\f3\b0 \cf0  \cf3 c\cf0  : \cf3 strArray\cf0 ) \{\
	            
\f2\b \cf2 if
\f3\b0 \cf0  (\cf3 charCountMap\cf0 .containsKey(\cf3 c\cf0 )) \{\
	                \cf3 charCountMap\cf0 .put(\cf3 c\cf0 , \cf3 charCountMap\cf0 .get(\cf3 c\cf0 ) + 1);\
	            \} 
\f2\b \cf2 else
\f3\b0 \cf0  \{\
	                \cf3 charCountMap\cf0 .put(\cf3 c\cf0 , 1);\
	            \}\
	        \}\
\
	        
\f2\b \cf2 for
\f3\b0 \cf0  (
\f2\b \cf2 char
\f3\b0 \cf0  \cf3 c\cf0  : \cf3 strArray\cf0 ) \{\
	            
\f2\b \cf2 if
\f3\b0 \cf0  (\cf3 charCountMap\cf0 .get(\cf3 c\cf0 ) == 1) \{\
	                System.
\f4\i\b \cf5 out
\f3\i0\b0 \cf0 .println(\cf4 "First Non-Repeated Character In '"\cf0  + \cf3 inputString\cf0  + \cf4 "' is '"\cf0  + \cf3 c\cf0  + \cf4 "'"\cf0 );\
\
	                
\f2\b \cf2 break
\f3\b0 \cf0 ;\
	            \}\
	        \}\
\
	        
\f2\b \cf2 for
\f3\b0 \cf0  (
\f2\b \cf2 char
\f3\b0 \cf0  \cf3 c\cf0  : \cf3 strArray\cf0 ) \{\
	            
\f2\b \cf2 if
\f3\b0 \cf0  (\cf3 charCountMap\cf0 .get(\cf3 c\cf0 ) > 1) \{\
	                System.
\f4\i\b \cf5 out
\f3\i0\b0 \cf0 .println(\cf4 "First Repeated Character In '"\cf0  + \cf3 inputString\cf0  + \cf4 "' is '"\cf0  + \cf3 c\cf0  + \cf4 "'"\cf0 );\
\
	                
\f2\b \cf2 break
\f3\b0 \cf0 ;\
	            \}\
	        \}\
	    \}\
\
	    
\f2\b \cf2 public
\f3\b0 \cf0  
\f2\b \cf2 static
\f3\b0 \cf0  
\f2\b \cf2 void
\f3\b0 \cf0  main(String[] \cf3 args\cf0 ) \{\
	        Scanner \cf3 sc\cf0  = 
\f2\b \cf2 new
\f3\b0 \cf0  Scanner(System.
\f4\i\b \cf5 in
\f3\i0\b0 \cf0 );\
	        System.
\f4\i\b \cf5 out
\f3\i0\b0 \cf0 .println(\cf4 "Enter the string :"\cf0 );\
	        String \cf3 input\cf0  = \cf3 sc\cf0 .next();\
	        
\f5\i firstRepeatedNonRepeatedChar
\f3\i0 (\cf3 input\cf0 );\
	        \cf3 sc\cf0 .close();\
	    \}\
\}\
\
\pard\pardeftab720\partightenfactor0

\f1 \cf0 \ul //Java program to print a String in reverse order\
\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f3 \cf0 \ulnone \
\pard\pardeftab720\partightenfactor0
\cf0 \

\f2\b \cf2 public
\f3\b0 \cf0  
\f2\b \cf2 class
\f3\b0 \cf0  Test11 \{\
\
	
\f2\b \cf2 public
\f3\b0 \cf0  
\f2\b \cf2 static
\f3\b0 \cf0  
\f2\b \cf2 void
\f3\b0 \cf0  main(String[] \cf3 args\cf0 ) \{\
		 String \cf3 s\cf0 =\cf4 "i love India"\cf0 ;\
		 String[] \cf3 split\cf0 = \cf3 s\cf0 .split(\cf4 " "\cf0 );\
		 \cf6 //approach:1->\cf0 \
\pard\pardeftab720\partightenfactor0
\cf6 //		 StringBuilder sBuilder=new StringBuilder();\cf0 \
\cf6 //		 for(\ul int\ulnone  i=split.length-1;i>=0;i--) \{\cf0 \
\cf6 //			 sBuilder.append(split[i]).append(" ");\cf0 \
\cf6 //		 \}\cf0 \
\cf6 //		 System.out.println(sBuilder);\cf0 \
		 \
		\cf6 // approach:-2>\cf0 \
		 \
		 String \cf3 str\cf0 =\cf3 split\cf0 [2]+\cf4 " "\cf0 +\cf3 split\cf0 [1]+\cf4 " "\cf0 +\cf3 split\cf0 [0];\
		 System.
\f4\i\b \cf5 out
\f3\i0\b0 \cf0 .println(\cf3 str\cf0 );\
	\}\
	\
\}\
\
\
\pard\pardeftab720\partightenfactor0

\f0\b \cf8 \cb9 \expnd0\expndtw0\kerning0
400 Bad Request\
401 Unauthorized\
\pard\pardeftab720\partightenfactor0
{\field{\*\fldinst{HYPERLINK "https://en.wikipedia.org/wiki/HTTP_402"}}{\fldrslt \cf10 402 Payment Required}}\cf10 \
\pard\pardeftab720\partightenfactor0
{\field{\*\fldinst{HYPERLINK "https://en.wikipedia.org/wiki/HTTP_403"}}{\fldrslt \cf10 403 Forbidden}}\
\pard\pardeftab720\partightenfactor0
{\field{\*\fldinst{HYPERLINK "https://en.wikipedia.org/wiki/HTTP_404"}}{\fldrslt \cf10 404 Not Found}}\
\pard\pardeftab720\partightenfactor0
\cf8 500 Internal Server Error\
501 Not Implemented\
\pard\pardeftab720\partightenfactor0
{\field{\*\fldinst{HYPERLINK "https://en.wikipedia.org/wiki/HTTP_502"}}{\fldrslt \cf10 502 Bad Gateway}}\cf10 \
\pard\pardeftab720\partightenfactor0
\cf8 503 Service Unavailable\
504 Gateway Timeout\
\
\

\itap1\trowd \taflags1 \trgaph108\trleft-108 \tamart240 \tamarb240 \trbrdrt\brdrnil \trbrdrl\brdrnil \trbrdrt\brdrnil \trbrdrr\brdrnil \tapadt120 \trpadl120 \tapadb120 \trpadr120 
\clvertalt \clshdrawnil \clwWidth774\clftsWidth3 \clbrdrt\brdrnil \clbrdrl\brdrnil \clbrdrb\brdrnil \clbrdrr\brdrnil \clpadt160 \clpadl160 \clpadb160 \clpadr160 \gaph\cellx2160
\clvertalt \clshdrawnil \clbrdrt\brdrnil \clbrdrl\brdrnil \clbrdrb\brdrnil \clbrdrr\brdrnil \clpadl0 \clpadr0 \gaph\cellx4320
\clvertalt \clshdrawnil \clbrdrt\brdrnil \clbrdrl\brdrnil \clbrdrb\brdrnil \clbrdrr\brdrnil \clpadl0 \clpadr0 \gaph\cellx6480
\clvertalt \clshdrawnil \clbrdrt\brdrnil \clbrdrl\brdrnil \clbrdrb\brdrnil \clbrdrr\brdrnil \clpadl0 \clpadr0 \gaph\cellx8640
\pard\intbl\itap1\pardeftab720\partightenfactor0

\f6\fs24 \cf0 \cb1 Sr. No.\cell 
\pard\intbl\itap1\pardeftab720\partightenfactor0
\cf0 Key\cell 
\pard\intbl\itap1\pardeftab720\partightenfactor0
\cf0 String Buffer\cell 
\pard\intbl\itap1\pardeftab720\partightenfactor0
\cf0 String Builder\cell \lastrow\row
\pard\pardeftab720\qc\partightenfactor0

\f7\b0 \cf0 \

\itap1\trowd \taflags1 \trgaph108\trleft-108 \tamart240 \tamarb240 \trbrdrt\brdrnil \trbrdrl\brdrnil \trbrdrr\brdrnil \tapadt120 \trpadl120 \tapadb120 \trpadr120 
\clvertalt \clshdrawnil \clbrdrt\brdrnil \clbrdrl\brdrnil \clbrdrb\brdrnil \clbrdrr\brdrnil \clpadl0 \clpadr0 \gaph\cellx2160
\clvertalt \clshdrawnil \clbrdrt\brdrnil \clbrdrl\brdrnil \clbrdrb\brdrnil \clbrdrr\brdrnil \clpadl0 \clpadr0 \gaph\cellx4320
\clvertalt \clshdrawnil \clbrdrt\brdrnil \clbrdrl\brdrnil \clbrdrb\brdrnil \clbrdrr\brdrnil \clpadl0 \clpadr0 \gaph\cellx6480
\clvertalt \clshdrawnil \clbrdrt\brdrnil \clbrdrl\brdrnil \clbrdrb\brdrnil \clbrdrr\brdrnil \clpadl0 \clpadr0 \gaph\cellx8640
\pard\intbl\itap1\pardeftab720\partightenfactor0
\cf0 1\cell 
\pard\intbl\itap1\pardeftab720\partightenfactor0
\cf0 Basic\cell 
\pard\intbl\itap1\pardeftab720\partightenfactor0
\cf0 StringBuffer was introduced with the initial release of Java\
\cell 
\pard\intbl\itap1\pardeftab720\partightenfactor0
\cf0 It was introduced in Java 5\cell \row

\itap1\trowd \taflags1 \trgaph108\trleft-108 \tamart240 \tamarb240 \trbrdrl\brdrnil \trbrdrr\brdrnil \tapadt120 \trpadl120 \tapadb120 \trpadr120 
\clvertalt \clshdrawnil \clbrdrt\brdrnil \clbrdrl\brdrnil \clbrdrb\brdrnil \clbrdrr\brdrnil \clpadl0 \clpadr0 \gaph\cellx2160
\clvertalt \clshdrawnil \clbrdrt\brdrnil \clbrdrl\brdrnil \clbrdrb\brdrnil \clbrdrr\brdrnil \clpadl0 \clpadr0 \gaph\cellx4320
\clvertalt \clshdrawnil \clbrdrt\brdrnil \clbrdrl\brdrnil \clbrdrb\brdrnil \clbrdrr\brdrnil \clpadl0 \clpadr0 \gaph\cellx6480
\clvertalt \clshdrawnil \clbrdrt\brdrnil \clbrdrl\brdrnil \clbrdrb\brdrnil \clbrdrr\brdrnil \clpadl0 \clpadr0 \gaph\cellx8640
\pard\intbl\itap1\pardeftab720\partightenfactor0
\cf0 2\cell 
\pard\intbl\itap1\pardeftab720\partightenfactor0
\cf0 Synchronized\cell 
\pard\intbl\itap1\pardeftab720\partightenfactor0
\cf0 It is synchronized\
\cell 
\pard\intbl\itap1\pardeftab720\partightenfactor0
\cf0 It is not synchronized\cell \row

\itap1\trowd \taflags1 \trgaph108\trleft-108 \tamart240 \tamarb240 \trbrdrl\brdrnil \trbrdrr\brdrnil \tapadt120 \trpadl120 \tapadb120 \trpadr120 
\clvertalt \clshdrawnil \clbrdrt\brdrnil \clbrdrl\brdrnil \clbrdrb\brdrnil \clbrdrr\brdrnil \clpadl0 \clpadr0 \gaph\cellx2160
\clvertalt \clshdrawnil \clbrdrt\brdrnil \clbrdrl\brdrnil \clbrdrb\brdrnil \clbrdrr\brdrnil \clpadl0 \clpadr0 \gaph\cellx4320
\clvertalt \clshdrawnil \clbrdrt\brdrnil \clbrdrl\brdrnil \clbrdrb\brdrnil \clbrdrr\brdrnil \clpadl0 \clpadr0 \gaph\cellx6480
\clvertalt \clshdrawnil \clbrdrt\brdrnil \clbrdrl\brdrnil \clbrdrb\brdrnil \clbrdrr\brdrnil \clpadl0 \clpadr0 \gaph\cellx8640
\pard\intbl\itap1\pardeftab720\partightenfactor0
\cf0 3\cell 
\pard\intbl\itap1\pardeftab720\partightenfactor0
\cf0 Performance\cell 
\pard\intbl\itap1\pardeftab720\partightenfactor0
\cf0 It is thread-safe. So, multiple threads can\'92t access at the same time, therefore, it is slow.\
\cell 
\pard\intbl\itap1\pardeftab720\partightenfactor0
\cf0 It is not thread-safe hence faster than String Buffer.\cell \row

\itap1\trowd \taflags1 \trgaph108\trleft-108 \tamart240 \tamarb240 \trbrdrl\brdrnil \trbrdrr\brdrnil \tapadt120 \trpadl120 \tapadb120 \trpadr120 
\clvertalt \clshdrawnil \clbrdrt\brdrnil \clbrdrl\brdrnil \clbrdrb\brdrnil \clbrdrr\brdrnil \clpadl0 \clpadr0 \gaph\cellx2160
\clvertalt \clshdrawnil \clbrdrt\brdrnil \clbrdrl\brdrnil \clbrdrb\brdrnil \clbrdrr\brdrnil \clpadl0 \clpadr0 \gaph\cellx4320
\clvertalt \clshdrawnil \clbrdrt\brdrnil \clbrdrl\brdrnil \clbrdrb\brdrnil \clbrdrr\brdrnil \clpadl0 \clpadr0 \gaph\cellx6480
\clvertalt \clshdrawnil \clbrdrt\brdrnil \clbrdrl\brdrnil \clbrdrb\brdrnil \clbrdrr\brdrnil \clpadl0 \clpadr0 \gaph\cellx8640
\pard\intbl\itap1\pardeftab720\partightenfactor0
\cf0 4\cell 
\pard\intbl\itap1\pardeftab720\partightenfactor0
\cf0 Mutable\cell 
\pard\intbl\itap1\pardeftab720\partightenfactor0
\cf0 It is mutable. We can modify string without creating an object.\
\cell 
\pard\intbl\itap1\pardeftab720\partightenfactor0
\cf0 It is also mutable\cell \row

\itap1\trowd \taflags1 \trgaph108\trleft-108 \tamart240 \tamarb240 \trbrdrl\brdrnil \trbrdrt\brdrnil \trbrdrr\brdrnil \tapadt120 \trpadl120 \tapadb120 \trpadr120 
\clvertalt \clshdrawnil \clbrdrt\brdrnil \clbrdrl\brdrnil \clbrdrb\brdrnil \clbrdrr\brdrnil \clpadl0 \clpadr0 \gaph\cellx2160
\clvertalt \clshdrawnil \clbrdrt\brdrnil \clbrdrl\brdrnil \clbrdrb\brdrnil \clbrdrr\brdrnil \clpadl0 \clpadr0 \gaph\cellx4320
\clvertalt \clshdrawnil \clbrdrt\brdrnil \clbrdrl\brdrnil \clbrdrb\brdrnil \clbrdrr\brdrnil \clpadl0 \clpadr0 \gaph\cellx6480
\clvertalt \clshdrawnil \clbrdrt\brdrnil \clbrdrl\brdrnil \clbrdrb\brdrnil \clbrdrr\brdrnil \clpadl0 \clpadr0 \gaph\cellx8640
\pard\intbl\itap1\pardeftab720\partightenfactor0
\cf0 5\cell 
\pard\intbl\itap1\pardeftab720\partightenfactor0
\cf0 Storage\cell 
\pard\intbl\itap1\pardeftab720\partightenfactor0
\cf0 Heap\cell 
\pard\intbl\itap1\pardeftab720\partightenfactor0
\cf0 Heap\cell \lastrow\row
\pard\pardeftab720\partightenfactor0

\f3\fs28 \cf0 \kerning1\expnd0\expndtw0 \
\
\
\
\pard\pardeftab720\qj\partightenfactor0

\f8\i\fs24 \cf0 \ul Throw vs Throws\
\pard\tx220\tx720\pardeftab720\li720\fi-720\qj\partightenfactor0
\ls1\ilvl0
\f3\i0\fs28 \cf0 \ulnone {\listtext	1.	}
\f7\fs24 \cf11 \cb9 \expnd0\expndtw0\kerning0
Java throw keyword is used throw an exception explicitly in the code, inside the function or the block of code.
\f3\fs28 \cf0 \cb1 \kerning1\expnd0\expndtw0 \
{\listtext	2.	}
\f1\fs24 \cf11 \cb9 \expnd0\expndtw0\kerning0
Java throws keyword is used in the method signature to declare an exception which might be thrown by the function while the execution of the code.\
\pard\tx566\pardeftab720\qj\partightenfactor0

\f3\fs28 \cf0 \cb1 \kerning1\expnd0\expndtw0 \
\pard\pardeftab720\partightenfactor0
\cf0 \
\
}